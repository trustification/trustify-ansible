apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: "{{ tpa_single_node_namespace }}"
  labels:
    app: server
    app.kubernetes.io/version: 2.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: server
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: redhat-trusted-profile-analyzer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: redhat-trusted-profile-analyzer
    spec:
      containers:
        - name: service
          image: "{{ tpa_single_node_trustification_image }}"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "echo > /dev/tcp/localhost/9010"
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "echo > /dev/tcp/localhost/9010"
          command:
            - /usr/local/bin/trustd
          args:
            - api
            - --auth-configuration
            - /etc/config/auth.yaml
          env:
            - name: NAMESPACE
              value: "{{ tpa_single_node_namespace }}"
            - name: RUST_LOG
              value: info
            - name: INFRASTRUCTURE_ENABLED
              value: 'true'
            - name: INFRASTRUCTURE_BIND
              value: '[::]:9010'
            - name: HTTP_SERVER_BIND_ADDR
              value: '::'
{% if tpa_single_node_ui_tls == 'true' %}
            - name: HTTP_SERVER_TLS_ENABLED
              value: 'true'
            - name: HTTP_SERVER_TLS_KEY_FILE
              value: /etc/tls/tls.key
            - name: HTTP_SERVER_TLS_CERTIFICATE_FILE
              value: /etc/tls/tls.crt
{% else %}
            - name: HTTP_SERVER_TLS_ENABLED
              value: 'false'
{% endif %}
            - name: TRUSTD_DB_HOST
              value: "{{ tpa_single_node_pg_host }}"
            - name: TRUSTD_DB_PORT
              value: "{{ tpa_single_node_pg_port }}"
            - name: TRUSTD_DB_NAME
              value: "{{ tpa_single_node_pg_db }}"
            - name: TRUSTD_DB_USER
              value: "{{ tpa_single_node_pg_user }}"
            - name: TRUSTD_DB_PASSWORD
              value: "{{ tpa_single_node_pg_user_passwd }}"
            - name: TRUSTD_DB_SSLMODE
              value: allow
{% if tpa_single_node_storage_region == 'None' %}
            - name: TRUSTD_STORAGE_STRATEGY
              value: fs
            - name: TRUSTD_STORAGE_FS_PATH
              value: /data/storage
{% else %}
            - name: TRUSTD_STORAGE_STRATEGY
              value: s3
            - name: TRUSTD_S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: storage_secret
                  key: storage_access_key
            - name: TRUSTD_S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: storage_secret
                  key: storage_secret_key
            - name: TRUSTD_S3_BUCKET
              value: "{{ tpa_single_node_storage_bucket }}"
            - name: TRUSTD_S3_REGION
              value: "{{ tpa_single_node_storage_region }}"
{% if tpa_single_node_storage_minio_endpoint != "None" %}
            - name: STORAGE_ENDPOINT
              value: "{{ tpa_single_node_storage_minio_endpoint }}"
{% endif %}
{% endif %}
            - name: SWAGGER_UI_OIDC_ISSUER_URL
              value: "{{ tpa_single_node_oidc_issuer_url }}"
            - name: SWAGGER_UI_OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oidc_secret
                  key: front_end
            - name: UI_ISSUER_URL
              value: "{{ tpa_single_node_oidc_issuer_url }}"
            - name: UI_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oidc_secret
                  key: front_end
          ports:
            - containerPort: 9010
              protocol: TCP
              name: infra
              hostPort: 9010
            - containerPort: 8080
              name: endpoint
              protocol: TCP
              hostIP: {{ tpa_single_node_rhel_host }}
{% if tpa_single_node_ui_tls == 'true' %}
              hostPort: 443
{% else %}
              hostPort: 80
{% endif %}

          volumeMounts:
            - mountPath: /etc/tls
              name: tls
              readOnly: true
            - name: config-auth
              mountPath: /etc/config/auth.yaml
              subPath: auth.yaml
            - name: oidc-secret
              mountPath: /etc/oidcsecret
{% if tpa_single_node_storage_region == 'None' %}
            - name: storage
              mountPath: /data/storage
{% else %}
            - name: storage-secret
              mountPath: /etc/storagesecret
{% endif %}
      volumes:
        - name: tls
          secret:
            secretName: tls_cert
        - name: config-auth
          configMap:
            name: server-api-auth
        - name: oidc-secret
          secret:
            secretName: oidc_secret
{% if tpa_single_node_storage_region == 'None' %}
        - name: storage
          persistentVolumeClaim:
            claimName: storage
{% else %}
        - name: storage-secret
          secret:
            secretName: storage_secret
{% endif %}
