---
- name: Generate Trust Anchor ConfigMap
  ansible.builtin.template:
    src: "{{ role_path }}/templates/manifests/infra/Configmap-trust-anchor.yaml.j2"
    dest: "{{ tpa_single_node_kube_manifest_dir }}/ConfigMaps/trust-anchor.yaml"
    mode: "0600"
  register: trust_anchor_configmap_result

- name: Build S3 Trust Anchors target list
  ansible.builtin.set_fact:
    s3_trust_anchors_list: >-
      {%- set paths = (
          tpa_single_node_storage_trust_anchors.split(',')
          if ',' in tpa_single_node_storage_trust_anchors
          else [tpa_single_node_storage_trust_anchors]
      ) -%}
      {%- for path in paths -%}
      {%- set filename = (
          path.split('/')[-1].strip()
      ) -%}
      /etc/s3-trust-anchors/{{ filename }}{{ ',' if not loop.last else '' }}
      {%- endfor -%}
  when: tpa_single_node_storage_trust_anchors != 'None'

- name: Generate S3 Trust Anchors ConfigMap
  ansible.builtin.template:
    src: "{{ role_path }}/templates/manifests/infra/Configmap-s3-trust-anchors.yaml.j2"
    dest: "{{ tpa_single_node_kube_manifest_dir }}/ConfigMaps/s3-trust-anchors.yaml"
    mode: "0600"
  when: s3_trust_anchors_list is defined

- name: Generate TLS Cert secret manifest
  ansible.builtin.template:
    src: "{{ role_path }}/templates/manifests/infra/Secret-tls-server.yaml.j2"
    dest: "{{ tpa_single_node_kube_manifest_dir }}/Secrets/tls-server.yaml"
    mode: "0600"
  vars:
    tpa_single_node_tls_server_crt_pem: "{{ lookup('file', tpa_single_node_tls_server_cert) }}"
    tpa_single_node_tls_server_key_pem: "{{ lookup('file', tpa_single_node_tls_server_key) }}"

- name: Define TLS secret
  ansible.builtin.command:
    cmd: "podman kube play {{ tpa_single_node_kube_manifest_dir }}/Secrets/tls-server.yaml"
  changed_when: false
