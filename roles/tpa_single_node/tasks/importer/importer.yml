---
- name: Copy create-importers.sql to Server
  ansible.builtin.copy:
    content: "{{ lookup('ansible.builtin.template', 'configs/create-importers.sql') }}"
    dest: "{{ tpa_single_node_config_dir }}/create-importers.sql"
    remote_src: true
    mode: "0600"

- name: Run create-importers.sql
  ansible.builtin.command: "psql postgresql://{{ tpa_single_node_pg_user }}:{{ tpa_single_node_pg_user_passwd }}@\
      {{ tpa_single_node_pg_host }}:{{ tpa_single_node_pg_port }}/{{ tpa_single_node_pg_db }}?sslmode={{ tpa_single_node_pg_ssl_mode }} \
      -v ON_ERROR_STOP=1 \
      -f {{ tpa_single_node_config_dir }}/create-importers.sql"
  changed_when: false
  no_log: true
  register: result
  retries: 2
  delay: 5
  until: result.rc == 0

- name: Set configmaps for importer
  ansible.builtin.set_fact:
    importer_configmaps: |
      {{
        [tpa_single_node_kube_manifest_dir + '/ConfigMaps/s3-trust-anchors.yaml']
        if s3_trust_anchors_list is defined and s3_trust_anchors_list | length > 0
        else []
      }}

- name: Deploy importer
  ansible.builtin.include_tasks: install_manifest.yml
  vars:
    manifest_name: importer
    concurrency: 4
    podman_spec:
      state: started
      systemd_file: importer
      network: "{{ tpa_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/importer/Deployment.yaml.j2') | from_yaml }}"
      configmaps: "{{ importer_configmaps }}"
