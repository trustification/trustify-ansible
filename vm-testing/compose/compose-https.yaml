services:
  keycloak:
    image: docker.io/bitnami/keycloak:23.0.7
    environment:
      - KEYCLOAK_DATABASE_VENDOR=dev-file
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123456
      - KEYCLOAK_ENABLE_HEALTH_ENDPOINTS=true
      - KEYCLOAK_CACHE_TYPE=local
      # Remove all the following envars if SSL is disabled
      - HTTPS_PORT=8443
      - KEYCLOAK_HTTPS_CERTIFICATE_FILE=/etc/x509/https/server-cert.pem
      - KEYCLOAK_HTTPS_CERTIFICATE_KEY_FILE=/etc/x509/https/server-key.pem
      - KEYCLOAK_HTTPS_USE_PEM=true
      - KEYCLOAK_ENABLE_HTTPS=true
    # Remove volumes if SSL is disabled
    volumes:
      - ./certs/server-cert.pem:/etc/x509/https/server-cert.pem:Z
      - ./certs/server-key.pem:/etc/x509/https/server-key.pem:Z
    ports:
      - "8090:8080"
      # Remove this port if SSL is disabled
      - "8443:8443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 20

  init-keycloak:
    image: docker.io/bitnami/keycloak:23.0.7
    # FIXME: broken in podman: https://github.com/containers/podman-compose/issues/575
    # depends_on:
    #   keycloak:
    #     condition: service_healthy
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KCADM_PATH=/opt/bitnami/keycloak/bin/kcadm.sh
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123456
      - REALM=trustify
      - INIT_DATA=/init-sso/data
      - CHICKEN_ADMIN=admin
      - CHICKEN_ADMIN_PASSWORD=admin123456
      # If SSL is disabled use the following REDIRECT_URIS instead
      # - REDIRECT_URIS=["http://192.168.124.60:*", "http://192.168.124.60:*"]
      - REDIRECT_URIS=["https://192.168.124.60/*","https://192.168.124.60:*"] #
      - WALKER_SECRET=ZVzq9AMOVUdMY1lSohpx1jI3aW56QDPS
      # If SSL is disabled use the following SSO_FRONTEND_URL instead
      # - SSO_FRONTEND_URL=http://192.168.124.60:8090
      - SSO_FRONTEND_URL=https://192.168.124.60:8443
    volumes:
      - ./config/init-sso:/init-sso:Z
    entrypoint: /usr/bin/bash
    command: /init-sso/init.sh

  postgres:
    image: docker.io/library/postgres:17
    ports:
      - "5432:5432"
    command: -c 'max_connections=400'
    environment:
      POSTGRES_PASSWORD: "postgres1234"
      POSTGRES_DB: "trustify"
      POSTGRES_MAX_CONNECTIONS: 200
    restart: always
    shm_size: "4g"

  minio:
    image: quay.io/minio/minio:RELEASE.2025-02-28T09-55-16Z
    command: server --console-address ":9001" /data1
    expose:
      - "9000"
      - "9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "password"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 10
    networks:
      default:
        aliases:
          - trustify.minio
          - minio

  createbuckets:
    image: quay.io/minio/mc:RELEASE.2025-02-21T16-00-46Z
    entrypoint:
      - /bin/sh
      - -c
      - |
        /usr/bin/mc config host add myminio http://minio:9000 admin password;
        /usr/bin/mc mb myminio/trustify || true;
        /usr/bin/mc anonymous set public myminio/trustify;
        /usr/bin/mc admin service restart myminio;
